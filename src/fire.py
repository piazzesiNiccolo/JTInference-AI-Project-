from tree.node import Clique,Separator
from tree.junction_tree import JunctionTree
from pgmpy.factors.discrete.CPD import TabularCPD

#setup nodes
fire = TabularCPD('f',2,[[0.99],[0.01]])
tampering = TabularCPD('t',2,[[0.98], [0.02]])
smoke = TabularCPD('s',2 ,[[0.99, 0.1], [0.01,0.9]],['f'],[2])
alarm = TabularCPD('a',2 ,[[0.9999, 0.15, 0.01, 0.5], [0.0001,0.85,0.99, 0.5]],['f','t'],[2,2])
leaving = TabularCPD('l',2 ,[[0.999, 0.12], [0.001,0.88]],['a'],[2])
report = TabularCPD('r',2 ,[[0.99, 0.25], [0.01,0.75]],['l'],[2])

#setup tree
la = Clique([leaving,alarm])
aft = Clique([alarm,fire,tampering])
lr = Clique([leaving,report])
fs = Clique([fire,smoke])
tree = JunctionTree('fire_tree',[la,aft,lr,fs])
tree.add_separator(la,aft)
tree.add_separator(la,lr)
tree.add_separator(aft,fs)

print('\n\n QUERY SU FIRE\n')
print('p(fire) senza evidenza ')
print(tree.query('f'))
l_evidence = ('l', 1)
a_evidence = ('a', 1)
print('p(fire) con evidenza leaving = 1 e alarm = 1')
print(tree.query('f',[l_evidence,a_evidence]))

tree.init_tree()
print('\n\n QUERY SU TAMPERING\n')
print('p(tampering) senza evidenza ')
print(tree.query('t'))
r_evidence = ('r', 1)
s_evidence = ('s', 0)
print('p(tampering) con evidenza report = 1 e smoke = 0')
print(tree.query('t',[r_evidence,s_evidence]))

tree.init_tree()
print('\n\n QUERY SU SMOKE\n')
print('p(smoke) senza evidenza ')
print(tree.query('s'))
f_evidence = ('f', 1)
l_evidence = ('l', 0)
print('p(tampering) con evidenza fire = 1 e leaving = 0')
print(tree.query('s',[f_evidence,l_evidence]))

tree.init_tree()
print('\n\n QUERY SU ALARM\n')
print('p(alarm) senza evidenza ')
print(tree.query('a'))
r_evidence = ('r', 1)
s_evidence = ('s', 0)
print('p(alarm) con evidenza report = 1 e smoke = 0')
print(tree.query('a',[r_evidence,s_evidence]))

tree.init_tree()
print('\n\n QUERY SU LEAVING\n')
print('p(leaving) senza evidenza ')
print(tree.query('l'))
f_evidence = ('f', 1)
t_evidence = ('t', 1)
print('p(tampering) con evidenza report = 1, fire = 1 e tampering = 1')
print(tree.query('l',[r_evidence,f_evidence, t_evidence]))

tree.init_tree()
print('\n\n QUERY SU REPORT\n')
print('p(report) senza evidenza ')
print(tree.query('r'))
t_evidence = ('t', 0)
s_evidence = ('s', 1)
print('p(report) con evidenza tamperig = 0 e smoke = 1')
print(tree.query('r',[t_evidence,s_evidence]))